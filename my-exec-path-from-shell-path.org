* my-exec-path-from-shell-path
Mac OSX 用に、shell から =exec-path= を設定するためのものです。

package で [[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]] という、
同様の機能を持つものを入れられるのですが、
そもそも package の実行時に =exec-path= を設定していないと
パッケージのビルドができなかったりする場合がある(多分、ある。自信ない)ので、
なによりも先に実行するために独自定義しています。

** 注意
例えば、ログインシェルとして zsh を使っていて、
=.zshrc= で自動的に tmux セッションにアタッチするような設定にしていると、
なにも対策せずに =exec-path-from-shell= しようとした場合、
tmux セッションにアタッチしようとして失敗し、変な文字列が =exec-path= に入ってしまいます。

Emacs から shell を実行する場合には =TERM= が =dumb= になるので、
その場合は余計なことをしないように、きちんと場合分けしておきましょう。

** 参考
- [[http://qiita.com/catatsuy/items/3dda714f4c60c435bb25][EmacsでPATHの設定が引き継がれない問題をエレガントに解決する - Qiita {キータ}]]
- [[http://shibayu36.hatenablog.com/entry/2012/08/13/214611][emacsにおける$PATHの話 - $shibayu36->blog;]]

#+BEGIN_SRC emacs-lisp
(defun my:set-exec-path-from-shell-PATH ()
  "Set up Emacs' `exec-path' and PATH environment variable to match that used by the user's shell.

This is particularly useful under Mac OSX, where GUI apps are not started from a shell."
  (interactive)
  (let ((path-from-shell (replace-regexp-in-string "[ \t\n]*$" "" (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))))
    (setenv "PATH" path-from-shell)
    (setq exec-path (split-string path-from-shell path-separator))))
#+END_SRC

読み込んだ時点で実行してしまいます。

#+BEGIN_SRC emacs-lisp
(my:set-exec-path-from-shell-PATH)
#+END_SRC
