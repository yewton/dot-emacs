#+STARTUP: showall

#+BEGIN_SRC emacs-lisp
(require 'org)
(require 'org-capture)
(require 'ox-taskjuggler)
(custom-set-faces
 '(org-level-1 ((t (:inherit outline-1 :weight bold :foreground "LightSkyBlue"))))
 '(org-level-2 ((t (:inherit outline-2 :weight bold :foreground "LightGoldenrod"))))
 '(org-level-3 ((t (:inherit outline-3 :weight bold :foreground "DeepSkyBlue"))))
 '(org-level-4 ((t (:inherit outline-4 :weight normal :foreground "chocolate1"))))
 '(org-level-5 ((t (:inherit outline-5 :weight normal :foreground "PaleGreen"))))
 '(org-level-6 ((t (:inherit outline-6 :weight normal :foreground "LightSteelBlue"))))
 '(org-level-7 ((t (:inherit outline-7 :weight normal :foreground "Aquamarine"))))
 '(org-level-8 ((t (:inherit outline-8 :weight normal :foreground "LightSalmon"))))
 '(org-agenda-date-weekend ((t (:inherit org-agenda-date :weight bold :foreground "SteelBlue"))))
 '(org-agenda-date-today ((t (:inherit org-agenda-date :weight bold :foreground "white" :background "orange3"))))
 '(org-column ((t (:background "gray20"))))
 '(org-column-title ((t (:background "gray90")))))

(defvar my:org-directory "~/Dropbox/org/")
(defvar my:org-schedule-file (concat my:org-directory "schedule.org"))

(custom-set-variables
 '(org-adapt-indentation nil)
 `(org-directory ,my:org-directory)
 '(org-agenda-files `(,org-directory))
 `(org-default-notes-file ,(concat org-directory "notes.org"))
 '(org-return-follows-link t)
 '(org-startup-truncated nil)
 '(org-agenda-include-diary t)
 '(org-agenda-custom-commands
   '(("h" "Schedule" agenda nil
      ((org-agenda-files `(,my:org-schedule-file))))))
 '(org-capture-templates
   `(
     ("t" "Todo" entry
      (file ,(concat org-directory "todo.org"))
      "* TODO <%<%Y-%m-%d %H:%M>> %?\n%i\n\n"
      :kill-buffer t)
     ("s" "Schedule" entry
      (file ,my:org-schedule-file)
      "* <%<%Y-%m-%d %H:%M>> %?\n%i\n\n"
      :kill-buffer t)
     ("j" "Journal" entry
      (file (concat org-directory (format-time-string "%Y_%m_%d.org")))
      "* <%<%Y-%m-%d %H:%M>> %?\n%i\n\n"
      :prepend t
      :unnarrowed t
      :kill-buffer t)))
      '(org-taskjuggler-default-global-properties
      ""))

(defun my:org-mode-hook ()
  (set (make-local-variable 'system-time-locale) "C")
  (org-display-inline-images))

(add-hook 'org-mode-hook #'my:org-mode-hook)

(define-key global-map (kbd "C-c c") 'org-capture)
(define-key global-map (kbd "C-c a") 'org-agenda)

;; Local Variables:
;; byte-compile-warnings: (not unresolved free-vars)
;; End:
#+END_SRC
