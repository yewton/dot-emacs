#+BEGIN_SRC emacs-lisp
;; ウィンドウ間移動
(require 'windmove)
(custom-set-variables '(windmove-wrap-around t))
;; cf. keyboard shortcuts - Globally override key binding in Emacs - Stack Overflow
;;     <http://stackoverflow.com/questions/683425/globally-override-key-binding-in-emacs>
(defvar my:keys-minor-mode-map (make-keymap) "my-keys-minor-mode keymap.")
(mapc (lambda (x)
        (define-key my:keys-minor-mode-map (car x) (cdr x))
        (global-set-key (car x) (cdr x)))
      '(("\C-\M-h" . windmove-left)
        ("\C-\M-k" . windmove-up)
        ("\C-\M-l" . windmove-right)
        ("\C-\M-j" . windmove-down)))
(define-minor-mode my-keys-minor-mode
  "A minor mode so that my key settings override annoying major modes."
  t " my-keys" 'my:keys-minor-mode-map)
(my-keys-minor-mode 1)
(defun my-minibuffer-setup-hook ()
  (my-keys-minor-mode 0))
(add-hook 'minibuffer-setup-hook 'my-minibuffer-setup-hook)
(defadvice load (after give-my-keybindings-priority)
  "Try to ensure that my keybindings always have priority."
  (if (not (eq (car (car minor-mode-map-alist)) 'my-keys-minor-mode))
      (let ((mykeys (assq 'my-keys-minor-mode minor-mode-map-alist)))
        (assq-delete-all 'my-keys-minor-mode minor-mode-map-alist)
        (add-to-list 'minor-mode-map-alist mykeys))))
(ad-activate 'load)
#+END_SRC
