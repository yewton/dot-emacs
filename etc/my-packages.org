#+STARTUP: showall

* パッケージの設定

** カスタム設定
#+BEGIN_SRC emacs-lisp :padline no
;;; -*- coding: utf-8; lexical-binding: t -*-
(setq el-get-sources
      `((:name org-mode :checkout "e8a2f33519e7ce4317e8adb7a94f6e68c9b79774")
        (:name markdown-mode :checkout "v2.1")
        (:name init-loader :checkout "a2fbec1382")
        (:name open-junk-file
               :before (autoload 'open-junk-file "open-junk-file" "" t))
        (:name helm :checkout "v1.7.7")
        (:name migemo :checkout "b6fd088296")
        (:name yasnippet :submodule ,(if (or (eq window-system 'w32) (null window-system)) nil t))
        (:name haskell-mode
               :build/windows-nt
               (let* ((target-dir (concat el-get-dir "haskell-mode/"))
                      (autoloads-file "haskell-mode-autoloads.el")
                      (generated-autoload-file (concat target-dir autoloads-file)))
                 `((,el-get-emacs
                    "--batch" "-q" "--no-site-file" "--eval"
                    ,(concat
                      "(progn (add-to-list (quote load-path) \".\") (ignore-errors (byte-recompile-directory \".\" 0))"
                      (format "(let ((generated-autoload-file \"%s\"))" generated-autoload-file)
                      (format "(update-directory-autoloads \"%s\")))" target-dir)))))
               :info nil
               :features haskell-mode-autoloads
               :autoloads nil)
        (:name wikitext-mode
               :before
               (autoload 'wikitext-mode
                 "wikitext-mode.el"
                 "Major mode for editing wiki-documents." t))
        (:name web-mode
               :before
               (autoload 'web-mode
                 "web-mode.el"
                 "Major mode for editing web templates:
HTML files embedding parts (CSS/JavaScript)
and blocks (PHP, Erb, Django/Twig, Smarty, JSP, ASP, etc.)" t))
        (:name imenu-anywhere
               :pkgname "yewton/imenu-anywhere"
               :branch "no-byte-compile")
        (:name org-reveal
               :branch "stable")))
#+END_SRC

** インストールパッケージのリスト
#+BEGIN_SRC emacs-lisp
(defvar my-packages)
(setq my-packages
      (append '(ace-isearch
                ace-jump-mode
                ace-jump-buffer
                ag
                anzu
                apache-mode
                apel
                auto-complete
                bm
                bookmark+
                buffer-move
                cl-lib
                coffee-mode
                color-moccur
                color-theme-zenburn
                crontab-mode
                ddskk
                dired+
                dired-hacks
                dockerfile-mode
                dream-theme
                dsvn
                elisp-slime-nav
                eww-lnum
                flymake
                free-keys
                garoon
                git-gutter
                git-gutter-fringe
                google-translate
                guide-key
                hc-zenburn-theme
                helm-ag
                helm-c-yasnippet
                helm-descbinds
                helm-gtags
                helm-migemo
                helm-swoop
                help+
                help-mode+
                howm
                htmlize
                info+
                japanese-holidays
                js2-mode
                lispxmp
                magit
                maxframe
                moccur-edit
                multiple-cursors
                org-ac
                org-present
                org-reveal
                php-eldoc
                php-mode
                pig-mode
                plantuml-mode
                popwin
                projectile
                quickrun
                rainbow-delimiters
                rainbow-identifiers
                rainbow-mode
                ruby-block
                ruby-electric
                ruby-end
                ruby-mode
                sbt-mode
                scala-mode
                scala-mode2
                smart-mode-line
                sr-speedbar
                sudo-ext
                template
                wgrep
                yaml-mode
                taskjuggler-mode)
              (mapcar 'el-get-as-symbol (mapcar 'el-get-source-name el-get-sources))))
#+END_SRC
