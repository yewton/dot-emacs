#+STARTUP: showall

* 10_ddskk - skk による日本語入力の設定

** コンパイル時の設定
#+BEGIN_SRC emacs-lisp
(require 'skk)
(require 'my-libs)
(eval-when-compile
  (require 'skk-vars)
  (require 'skk-autoloads)
  (require 'skk-macs))
#+END_SRC

** キーバインドの設定
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-x C-j") 'skk-mode)
(global-set-key (kbd "C-x j") 'skk-auto-fill-mode)
(global-set-key (kbd "C-x t") 'skk-tutorial)
#+END_SRC

** カスタマイズ
*** SKK の設定ファイルなどを置くディレクトリ
#+BEGIN_SRC emacs-lisp
(custom-set-variables `(skk-user-directory ,(my-expand-dir-name "ddskk" my-var-dir)))
#+END_SRC

*** 辞書の場所
#+BEGIN_SRC emacs-lisp
(require 'el-get-core)
(custom-set-variables `(skk-cdb-large-jisyo ,(f-expand "dic/SKK-JISYO.L.cdb" (el-get-package-directory 'ddskk))))
#+END_SRC

*** 各種ファイルの場所
`skk-user-directory` からデフォルト値が決定されるはずなのだが、
なぜか反映されないため明示的に指定する。

#+BEGIN_SRC emacs-lisp
(custom-set-variables
 `(skk-jisyo ,(f-expand "jisyo" skk-user-directory))
 `(skk-record-file ,(f-expand "record" skk-user-directory)))
#+END_SRC

*** sticky キーを使う
Shift キーを押しながら入力する代わりに、一度規定のキーを押下することで、
次に入力するキーを Shift キーを押しながら入力したことに出来る。

#+BEGIN_SRC emacs-lisp
(custom-set-variables '(skk-sticky-key ";"))
#+END_SRC

*** =C-j= に関する設定
ddskk 標準の設定では、 =C-j= (=newline-and-indent=) の挙動を完全にオーバーライドしてしまう。
このままでは不便なため、挙動を調整する。

#+BEGIN_SRC emacs-lisp
(defun skk-C-j-key (arg)
  "C-j の挙動に関する設定"
  (interactive "P")
  (cond
   ;; 必要な箇所でのみ C-j を skk-kakutei に割り当てる
   ((or (skk-in-minibuffer-p) skk-henkan-mode)
    (skk-kakutei arg))
   ;; さもなくば標準の動作を行う
   (t
    (skk-emulate-original-map arg))))
;; 状態遷移規則のリストに追加する
(add-to-list 'skk-rom-kana-rule-list
             '(skk-kakutei-key nil skk-C-j-key))
(defadvice skk-latin-mode (after skk-latin-mode-free-cj activate)
  ;; latin-mode ではこのキーでかなモードに遷移する
  (define-key skk-latin-mode-map (kbd "C-o") #'skk-kakutei)
  ;; latin-mode で C-j を明け渡す
  (define-key skk-latin-mode-map (kbd "C-j") nil))
(defadvice skk-jisx0208-latin-mode (after skk-jisx0208-latin-mode-free-cj activate)
  ;; 全英モードではこのキーでかなモードに遷移する
  (define-key skk-jisx0208-latin-mode-map (kbd "C-o") #'skk-kakutei)
  ;; 全英モードで C-j を明け渡す
  (define-key skk-jisx0208-latin-mode-map (kbd "C-j") nil))
#+END_SRC

*** 雑多な設定
**** 参考 URL
- [[http://www.gfd-dennou.org/member/uwabami/cc-env/emacs/ddskk_config.html][Youhei SASAKI's official site: DDSKKの設定]]
- [[http://mugijiru.seesaa.net/article/275755984.html][暇だったからddskkの設定いじった: 麦汁三昧]]

#+BEGIN_SRC emacs-lisp
(eval-after-load 'skk
  #'(progn
      (require 'context-skk)
      (require 'skk-hint)
      (custom-set-variables '(skk-hint-start-char ?:))
      ;; 空の辞書ファイルを作成
      (unless (file-exists-p skk-jisyo)
        (write-region "" nil skk-jisyo))))
(custom-set-variables
 ;; Enter で改行しない
 '(skk-egg-like-newline t)
 ;; 注釈の表示
 '(skk-show-annotation t)
 ;; インジケータを左端に.
 '(skk-status-indicator 'left)
 ;; 半角カナを入力
 '(skk-use-jisx0201-input-method t)
 ;;"「"を入力したら"」"も自動で挿入
 '(skk-auto-insert-paren t)
 ;; 見出し語と送り仮名がマッチした候補を優先して表示
 '(skk-henkan-strict-okuri-precedence t)
 ;; インクリメンタルサーチではskkを利用しない
 '(skk-isearch-mode-enable nil))
(add-hook 'before-make-frame-hook #'ccc-setup)

(defun my--org-return-skk-ad (this-func &rest args)
  "org-modeの表の中でもskkが使えるようにする."
  (cond ((and (org-at-table-p) skk-henkan-mode)
         (skk-kakutei))
        (t
         (apply this-func args))))
(advice-add #'org-return :around #'my--org-return-skk-ad)

(defun my--markdown-entery-key-ad (this-func &rest args)
  "markdown-modeでskk-henkan-mode中にエンターすると行頭にカーソルが飛んでしまう問題の対応"
  (if skk-henkan-mode (skk-kakutei)
    (apply this-func args)))
(advice-add #'markdown-enter-key :around #'my--markdown-entery-key-ad)
#+END_SRC
