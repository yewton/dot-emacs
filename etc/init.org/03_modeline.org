#+STARTUP: showall

* modeline - モードラインの設定

** バッテリの状態を表示する
#+BEGIN_SRC emacs-lisp :padline no
;;; -*- coding: utf-8; lexical-binding: t -*-
(require 'my-libs)
(display-battery-mode 1)
(custom-set-variables '(battery-mode-line-format " [%b%p%%]"))
#+END_SRC

** smart-mode-line
- [[https://github.com/Bruce-Connor/smart-mode-line][Bruce-Connor/smart-mode-line]]

#+BEGIN_SRC emacs-lisp
(custom-set-variables
 '(sml/no-confirm-load-theme t))
(sml/setup)
(declare-function sml/apply-theme "smart-mode-line.el")
(sml/apply-theme 'respectful)
#+END_SRC

** その他
#+BEGIN_SRC emacs-lisp
;; mode-lineのモード情報をコンパクトに表示する - Life is very short
;; <http://d.hatena.ne.jp/syohex/20130131/1359646452>
(defvar mode-line-cleaner-alist)
(setq mode-line-cleaner-alist
  '( ;; For minor-mode, first char is 'space'
    (howm-mode . " Hw")
    (iimage-mode . " II")
    (yas-minor-mode . " Ys")
    (eldoc-mode . "")
    (abbrev-mode . "")
    (helm-gtags-mode . " HG")
    (flymake-mode . " Fm")
    (helm-mode . "")
    (auto-complete-mode . "")
    (action-lock-mode . "")
    (guide-key-mode . "")
    (elisp-slime-nav-mode . "")
    (context-skk-mode . "")
    ;; Major modes
    (org-mode . " Org")
    (lisp-interaction-mode . "Li")
    (python-mode . "Py")
    (ruby-mode . "Rb")
    (emacs-lisp-mode . "EL")
    (markdown-mode . "Md")))

(defun my--clean-mode-line()
  (--each mode-line-cleaner-alist
    (let* ((mode (car it))
           (mode-str (cdr it))
           (old-mode-str (cdr (assq mode minor-mode-alist))))
      (when old-mode-str
        (setcar old-mode-str mode-str))
      ;; major mode
      (when (eq mode major-mode)
        (setq mode-name mode-str)))))
(add-hook 'after-change-major-mode-hook #'my--clean-mode-line)
#+END_SRC
