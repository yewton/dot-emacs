#+STARTUP: showall

#+BEGIN_SRC emacs-lisp
(require 'org)
(require 'org-capture)
(require 'org-journal)
(require 'ox-taskjuggler)

(defvar my:org-directory "~/Dropbox/org/")
(defvar my:org-schedule-file (concat my:org-directory "schedule.org"))

;;; org-journal
(define-key global-map (kbd "C-c C-j") 'org-journal-new-entry)
(define-key org-mode-map (kbd "C-c C-j") 'org-journal-new-entry)
(custom-set-variables
 `(org-journal-dir ,(expand-file-name (concat my:org-directory "/journal/")))
 '(org-journal-file-format "%Y-%m-%d.org")
 '(org-journal-date-format "%A, %x")
 `(org-journal-time-format ,(concat (org-time-stamp-format t) " ")))

(custom-set-variables
 '(org-adapt-indentation nil)
 `(org-directory ,my:org-directory)
 '(org-agenda-files `(,org-directory))
 `(org-default-notes-file ,(concat org-directory "notes.org"))
 '(org-return-follows-link t)
 '(org-startup-truncated nil)
 '(org-agenda-include-diary t)
 '(org-agenda-custom-commands
   '(("h" "Schedule" agenda nil
      ((org-agenda-files `(,my:org-schedule-file))))
     ("j" "Journal" agenda nil
      ((org-agenda-files `(,org-journal-dir))))))
 '(org-capture-templates
   `(
     ("t" "Todo" entry
      (file ,(concat org-directory "todo.org"))
      "* TODO <%<%Y-%m-%d %H:%M>> %?\n%i\n\n"
      :kill-buffer t)
     ("s" "Schedule" entry
      (file ,my:org-schedule-file)
      "* <%<%Y-%m-%d %H:%M>> %?\n%i\n\n"
      :kill-buffer t)))
 '(org-taskjuggler-default-global-properties "")
 '(org-src-window-setup 'current-window))

(defun my:org-mode-hook ()
  (set (make-local-variable 'system-time-locale) "C")
  (org-display-inline-images))

(add-hook 'org-mode-hook #'my:org-mode-hook)

(define-key global-map (kbd "C-c l") 'org-store-link)
(define-key global-map (kbd "C-c c") 'org-capture)
(define-key global-map (kbd "C-c a") 'org-agenda)
(define-key global-map (kbd "C-c b") 'org-iswitchb)

(eval-after-load "ox"
  (custom-set-variables
   '(org-export-allow-bind-keywords t)
   '(org-export-date-timestamp-format "%M")))
#+END_SRC

* org-ac

#+BEGIN_SRC emacs-lisp
(require 'org-ac)
(org-ac/config-default)
#+END_SRC

* EOF

#+BEGIN_SRC emacs-lisp
;; Local Variables:
;; byte-compile-warnings: (not unresolved free-vars)
;; End:
#+END_SRC
